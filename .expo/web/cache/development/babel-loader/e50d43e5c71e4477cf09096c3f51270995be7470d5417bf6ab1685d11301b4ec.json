{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport BouncyCheckbox from \"react-native-bouncy-checkbox\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { completeTodo } from \"../redux/slice/todo-slice\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar CheckBoxComponent = function CheckBoxComponent(_ref) {\n  var item = _ref.item;\n  var _useState = useState(item.isComplete),\n    _useState2 = _slicedToArray(_useState, 2),\n    CheckBoxValue = _useState2[0],\n    setCheckBoxValue = _useState2[1];\n  var dispatch = useDispatch();\n  return _jsx(BouncyCheckbox, {\n    size: 25,\n    fillColor: \"black\",\n    unfillColor: \"#FFFFFF\",\n    isChecked: CheckBoxValue,\n    iconStyle: {\n      borderColor: \"black\"\n    },\n    innerIconStyle: {\n      borderWidth: 2\n    },\n    onPress: function onPress() {\n      setCheckBoxValue(!CheckBoxValue);\n      dispatch(completeTodo({\n        id: item.id,\n        value: !CheckBoxValue\n      }));\n    }\n  });\n};\nexport default CheckBoxComponent;","map":{"version":3,"names":["React","useState","BouncyCheckbox","useDispatch","useSelector","completeTodo","jsx","_jsx","CheckBoxComponent","_ref","item","_useState","isComplete","_useState2","_slicedToArray","CheckBoxValue","setCheckBoxValue","dispatch","size","fillColor","unfillColor","isChecked","iconStyle","borderColor","innerIconStyle","borderWidth","onPress","id","value"],"sources":["C:/Users/dubay key/Downloads/TODO-app-main/TODO-app-main/components/CheckBoxComponent.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport BouncyCheckbox from \"react-native-bouncy-checkbox\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { completeTodo } from \"../redux/slice/todo-slice\";\n// install native-base using yarn add native-base or npm install native-base\n\nconst CheckBoxComponent = ({ item }) => {\n  const [CheckBoxValue, setCheckBoxValue] = useState(item.isComplete);\n  // const todos = useSelector((state) => state.todos.data);\n\n  const dispatch = useDispatch();\n\n  return (\n    <BouncyCheckbox\n      size={25}\n      fillColor=\"black\"\n      unfillColor=\"#FFFFFF\"\n      isChecked={CheckBoxValue}\n      iconStyle={{ borderColor: \"black\" }}\n      innerIconStyle={{ borderWidth: 2 }}\n      onPress={() => {\n        setCheckBoxValue(!CheckBoxValue);\n        dispatch(completeTodo({ id: item.id, value: !CheckBoxValue }));\n      }}\n    />\n  );\n};\n\nexport default CheckBoxComponent;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,cAAc,MAAM,8BAA8B;AACzD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,YAAY;AAAoC,SAAAC,GAAA,IAAAC,IAAA;AAGzD,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAAC,IAAA,EAAiB;EAAA,IAAXC,IAAI,GAAAD,IAAA,CAAJC,IAAI;EAC/B,IAAAC,SAAA,GAA0CV,QAAQ,CAACS,IAAI,CAACE,UAAU,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAA5DI,aAAa,GAAAF,UAAA;IAAEG,gBAAgB,GAAAH,UAAA;EAGtC,IAAMI,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAE9B,OACEI,IAAA,CAACL,cAAc;IACbgB,IAAI,EAAE,EAAG;IACTC,SAAS,EAAC,OAAO;IACjBC,WAAW,EAAC,SAAS;IACrBC,SAAS,EAAEN,aAAc;IACzBO,SAAS,EAAE;MAAEC,WAAW,EAAE;IAAQ,CAAE;IACpCC,cAAc,EAAE;MAAEC,WAAW,EAAE;IAAE,CAAE;IACnCC,OAAO,EAAE,SAAAA,QAAA,EAAM;MACbV,gBAAgB,CAAC,CAACD,aAAa,CAAC;MAChCE,QAAQ,CAACZ,YAAY,CAAC;QAAEsB,EAAE,EAAEjB,IAAI,CAACiB,EAAE;QAAEC,KAAK,EAAE,CAACb;MAAc,CAAC,CAAC,CAAC;IAChE;EAAE,CACH,CAAC;AAEN,CAAC;AAED,eAAeP,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}