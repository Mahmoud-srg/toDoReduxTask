{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TodoList from \"./TodoList\";\nimport { styles } from \"../StyleSheet\";\nimport { storeData } from \"../utils/asyncStorage\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTodo } from \"../redux/slice/todo-slice\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function TodoForm() {\n  var os = Platform.OS;\n  var dispach = useDispatch();\n  var todos = useSelector(function (state) {\n    return state.todos.data;\n  });\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    title = _useState2[0],\n    setTitle = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    description = _useState4[0],\n    setDescription = _useState4[1];\n  var handleAddBtn = function handleAddBtn(title, description) {\n    var isTodoFound = todos.find(function (todo) {\n      return todo.title == title;\n    });\n    if (!isTodoFound && title && description) {\n      var newTodo = {\n        id: todos.length + 1,\n        title: title,\n        description: description,\n        isComplete: false\n      };\n      dispach(addTodo(newTodo));\n    }\n  };\n  useEffect(function () {\n    storeData(todos);\n    console.log(\"Global State Changed\");\n  }, [todos]);\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _jsx(ScrollView, {\n      children: _jsxs(View, {\n        children: [_jsxs(View, {\n          style: _objectSpread(_objectSpread({}, styles.container), {}, {\n            marginBottom: \"5rem\"\n          }),\n          children: [_jsx(Text, {\n            style: _objectSpread(_objectSpread({}, styles.header), {}, {\n              color: os == \"ios\" ? \"black\" : \"gray\"\n            }),\n            children: \"To-Do App\"\n          }), _jsx(TextInput, {\n            style: styles.input,\n            onChangeText: function onChangeText(text) {\n              return setTitle(text);\n            },\n            value: title,\n            placeholder: \"Enter Title\"\n          }), _jsx(TextInput, {\n            style: styles.input,\n            onChangeText: function onChangeText(text) {\n              return setDescription(text);\n            },\n            value: description,\n            placeholder: \"Enter Description\"\n          }), _jsx(Pressable, {\n            style: styles.button,\n            onPress: function onPress() {\n              return handleAddBtn(title, description);\n            },\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Add \"\n            })\n          })]\n        }), _jsx(View, {\n          style: {\n            width: \"80%\",\n            marginHorizontal: \"auto\"\n          },\n          children: _jsx(TodoList, {\n            todos: todos\n          })\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","useEffect","useState","View","Text","TextInput","SafeAreaView","ScrollView","Pressable","Platform","TodoList","styles","storeData","useDispatch","useSelector","addTodo","jsx","_jsx","jsxs","_jsxs","TodoForm","os","OS","dispach","todos","state","data","_useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","description","setDescription","handleAddBtn","isTodoFound","find","todo","newTodo","id","length","isComplete","console","log","style","flex","children","_objectSpread","container","marginBottom","header","color","input","onChangeText","text","value","placeholder","button","onPress","buttonText","width","marginHorizontal"],"sources":["C:/Users/dubay key/Downloads/TODO-app-main/TODO-app-main/components/TodoForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  SafeAreaView,\n  ScrollView,\n  Pressable,\n  Platform,\n} from \"react-native\";\n\nimport TodoList from \"./TodoList\";\nimport { styles } from \"../StyleSheet\";\nimport { storeData } from \"../utils/asyncStorage\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addTodo } from \"../redux/slice/todo-slice\";\n\nexport default function TodoForm() {\n  const os = Platform.OS;\n  const dispach = useDispatch();\n  const todos = useSelector((state) => state.todos.data);\n  const [title, setTitle] = useState(\"\");\n\n  const [description, setDescription] = useState(\"\");\n\n  const handleAddBtn = (title, description) => {\n    const isTodoFound = todos.find((todo) => todo.title == title);\n    if (!isTodoFound && title && description) {\n      const newTodo = {\n        id: todos.length + 1,\n        title: title,\n        description: description,\n        isComplete: false,\n      };\n      dispach(addTodo(newTodo));\n    }\n  };\n\n  useEffect(() => {\n    storeData(todos);\n    console.log(\"Global State Changed\");\n  }, [todos]);\n\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      <ScrollView>\n        <View>\n          <View style={{ ...styles.container, marginBottom: \"5rem\" }}>\n            <Text\n              style={{\n                ...styles.header,\n                color: os == \"ios\" ? \"black\" : \"gray\",\n              }}\n            >\n              To-Do App\n            </Text>\n            <TextInput\n              style={styles.input}\n              onChangeText={(text) => setTitle(text)}\n              value={title}\n              placeholder=\"Enter Title\"\n            />\n            <TextInput\n              style={styles.input}\n              onChangeText={(text) => setDescription(text)}\n              value={description}\n              placeholder=\"Enter Description\"\n            />\n            <Pressable\n              style={styles.button}\n              onPress={() => handleAddBtn(title, description)}\n            >\n              <Text style={styles.buttonText}>Add </Text>\n            </Pressable>\n          </View>\n<View style={{width:\"80%\" ,marginHorizontal:\"auto\"}}>\n\n          <TodoList todos={todos} />\n</View>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}